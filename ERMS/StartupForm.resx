<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        /8P////j////4////+c=
</value>
  </data>
</root>