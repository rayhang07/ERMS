<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="PbMenuIcon.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>